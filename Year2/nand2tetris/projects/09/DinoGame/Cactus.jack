class Cactus {

   field int xPos;
   field Memory memAddress;


   /** Constructs a new cactus with a given location and size. */
   constructor Cactus new() {
      let xPos = 0;
      do draw();
      return this;
   }

   method int getXPos() {
      return xPos;
   }

   method void setXPos(int newXPos) {
      let xPos = newXPos;
      return;
   }

   /** Disposes this cactus. */
   method void dispose() {
      do Memory.deAlloc(this);
      return;
   }

   // HEIGHT -> 230 - 185 -> 45 but max 230
   // WIDTH -> 450 - 480  -> 30
   /** Draws the cactus on the screen. */
   method void draw() {
      // each pixel is of size 5*5
      do Screen.setColor(true);

      // Bottom -> Top
      // Center pole
      do Screen.drawRectangle(465, 225, 480, 230); //(W1, L1, W2, L2)
      do Screen.drawRectangle(465, 220, 480, 225); //(W1, L1, W2, L2)
      do Screen.drawRectangle(465, 215, 480, 220); //(W1, L1, W2, L2)
      do Screen.drawRectangle(465, 210, 480, 215); //(W1, L1, W2, L2)
      do Screen.drawRectangle(465, 205, 480, 210); //(W1, L1, W2, L2)
      do Screen.drawRectangle(465, 200, 480, 205); //(W1, L1, W2, L2)
      do Screen.drawRectangle(470, 195, 475, 200); //(W1, L1, W2, L2)

      // right arm
      do Screen.drawRectangle(455, 210, 465, 215); //(W1, L1, W2, L2)
      do Screen.drawRectangle(450, 205, 460, 210); //(W1, L1, W2, L2)
      do Screen.drawRectangle(450, 200, 460, 205); //(W1, L1, W2, L2)
      do Screen.drawRectangle(455, 195, 460, 200); //(W1, L1, W2, L2)

      // left arm
      do Screen.drawRectangle(480, 215, 490, 220); //(W1, L1, W2, L2)
      do Screen.drawRectangle(485, 210, 490, 215); //(W1, L1, W2, L2)
      do Screen.drawRectangle(485, 205, 490, 210); //(W1, L1, W2, L2)
      
      return;
    }

   /** Erases the cactus from the screen. */
   method void erase() {
      do Screen.setColor(false);
   
      // main structure
      do Screen.drawRectangle(465 - xPos, 225, 480 - xPos, 230); //(W1, L1, W2, L2)
      do Screen.drawRectangle(465 - xPos, 220, 480 - xPos, 225); //(W1, L1, W2, L2)
      do Screen.drawRectangle(465 - xPos, 215, 480 - xPos, 220); //(W1, L1, W2, L2)
      do Screen.drawRectangle(465 - xPos, 210, 480 - xPos, 215); //(W1, L1, W2, L2)
      do Screen.drawRectangle(465 - xPos, 205, 480 - xPos, 210); //(W1, L1, W2, L2)
      do Screen.drawRectangle(465 - xPos, 200, 480 - xPos, 205); //(W1, L1, W2, L2)
      do Screen.drawRectangle(470 - xPos, 195, 475 - xPos, 200); //(W1, L1, W2, L2)

      // right arm
      do Screen.drawRectangle(455 - xPos, 210, 465 - xPos, 215); //(W1, L1, W2, L2)
      do Screen.drawRectangle(450 - xPos, 205, 460 - xPos, 210); //(W1, L1, W2, L2)
      do Screen.drawRectangle(450 - xPos, 200, 460 - xPos, 205); //(W1, L1, W2, L2)
      do Screen.drawRectangle(455 - xPos, 195, 460 - xPos, 200); //(W1, L1, W2, L2)

      // left arm
      do Screen.drawRectangle(480 - xPos, 215, 490 - xPos, 220); //(W1, L1, W2, L2)
      do Screen.drawRectangle(485 - xPos, 210, 490 - xPos, 215); //(W1, L1, W2, L2)
      do Screen.drawRectangle(485 - xPos, 205, 490 - xPos, 210); //(W1, L1, W2, L2)
      return;
   }

   method void moveLeft() {
      do Screen.setColor(false);
   
      // main structure
      do Screen.drawRectangle(465 - xPos, 225, 480 - xPos, 230); //(W1, L1, W2, L2)
      do Screen.drawRectangle(465 - xPos, 220, 480 - xPos, 225); //(W1, L1, W2, L2)
      do Screen.drawRectangle(465 - xPos, 215, 480 - xPos, 220); //(W1, L1, W2, L2)
      do Screen.drawRectangle(465 - xPos, 210, 480 - xPos, 215); //(W1, L1, W2, L2)
      do Screen.drawRectangle(465 - xPos, 205, 480 - xPos, 210); //(W1, L1, W2, L2)
      do Screen.drawRectangle(465 - xPos, 200, 480 - xPos, 205); //(W1, L1, W2, L2)
      do Screen.drawRectangle(470 - xPos, 195, 475 - xPos, 200); //(W1, L1, W2, L2)

      // right arm
      do Screen.drawRectangle(455 - xPos, 210, 465 - xPos, 215); //(W1, L1, W2, L2)
      do Screen.drawRectangle(450 - xPos, 205, 460 - xPos, 210); //(W1, L1, W2, L2)
      do Screen.drawRectangle(450 - xPos, 200, 460 - xPos, 205); //(W1, L1, W2, L2)
      do Screen.drawRectangle(455 - xPos, 195, 460 - xPos, 200); //(W1, L1, W2, L2)

      // left arm
      do Screen.drawRectangle(480 - xPos, 215, 490 - xPos, 220); //(W1, L1, W2, L2)
      do Screen.drawRectangle(485 - xPos, 210, 490 - xPos, 215); //(W1, L1, W2, L2)
      do Screen.drawRectangle(485 - xPos, 205, 490 - xPos, 210); //(W1, L1, W2, L2)

      let xPos = xPos + 2;

      do Screen.setColor(true);

      // main structure
      do Screen.drawRectangle(465 - xPos, 225, 480 - xPos, 230); //(W1, L1, W2, L2)
      do Screen.drawRectangle(465 - xPos, 220, 480 - xPos, 225); //(W1, L1, W2, L2)
      do Screen.drawRectangle(465 - xPos, 215, 480 - xPos, 220); //(W1, L1, W2, L2)
      do Screen.drawRectangle(465 - xPos, 210, 480 - xPos, 215); //(W1, L1, W2, L2)
      do Screen.drawRectangle(465 - xPos, 205, 480 - xPos, 210); //(W1, L1, W2, L2)
      do Screen.drawRectangle(465 - xPos, 200, 480 - xPos, 205); //(W1, L1, W2, L2)
      do Screen.drawRectangle(470 - xPos, 195, 475 - xPos, 200); //(W1, L1, W2, L2)


      // right arm
      do Screen.drawRectangle(455 - xPos, 210, 465 - xPos, 215); //(W1, L1, W2, L2)
      do Screen.drawRectangle(450 - xPos, 205, 460 - xPos, 210); //(W1, L1, W2, L2)
      do Screen.drawRectangle(450 - xPos, 200, 460 - xPos, 205); //(W1, L1, W2, L2)
      do Screen.drawRectangle(455 - xPos, 195, 460 - xPos, 200); //(W1, L1, W2, L2)

      // left arm
      do Screen.drawRectangle(480 - xPos, 215, 490 - xPos, 220); //(W1, L1, W2, L2)
      do Screen.drawRectangle(485 - xPos, 210, 490 - xPos, 215); //(W1, L1, W2, L2)
      do Screen.drawRectangle(485 - xPos, 205, 490 - xPos, 210); //(W1, L1, W2, L2)
      do Sys.wait(7);

      return;
   }
}
