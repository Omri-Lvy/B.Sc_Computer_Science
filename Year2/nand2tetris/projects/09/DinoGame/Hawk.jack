class Hawk {

    field int x, y; // screen location of the hawk's top-left corner
    field int size; // length of this hawk, in pixels
    field Memory memAddress;
    field int xPos;

    /** Constructs a new hawk with a given location and size. */
    constructor Hawk new(int Asize) {
        let x = 0;
        let y = 0;
        let size = Asize;
        return this;
    }

    /** Disposes this hawk. */
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    method int getXPos() {
      return xPos;
    }

    method void setXPos(int newXPos) {
        let xPos = newXPos;
        return;
    }

    method void erase() {
      do Screen.setColor(false);
      // Bottom -> Top
      do Screen.drawRectangle(440 - xPos, 135, 445 - xPos, 140); //(W1, L1, W2, L2)
      do Screen.drawRectangle(440 - xPos, 130, 450 - xPos, 135); //(W1, L1, W2, L2)
      do Screen.drawRectangle(440 - xPos, 125, 450 - xPos, 130); //(W1, L1, W2, L2)
      do Screen.drawRectangle(440 - xPos, 120, 455 - xPos, 125); //(W1, L1, W2, L2)
      do Screen.drawRectangle(440 - xPos, 115, 460 - xPos, 120); //(W1, L1, W2, L2)
      do Screen.drawRectangle(440 - xPos, 110, 475 - xPos, 115); //(W1, L1, W2, L2)
      do Screen.drawRectangle(440 - xPos, 105, 465 - xPos, 110); //(W1, L1, W2, L2)
      do Screen.drawRectangle(435 - xPos, 100, 480 - xPos, 105); //(W1, L1, W2, L2)
      do Screen.drawRectangle(430 - xPos, 95, 465 - xPos, 100); //(W1, L1, W2, L2)
      do Screen.drawRectangle(400 - xPos, 90, 460 - xPos, 95); //(W1, L1, W2, L2)
      do Screen.drawRectangle(405 - xPos, 85, 425 - xPos, 90); //(W1, L1, W2, L2)
      do Screen.drawRectangle(410 - xPos, 80, 420 - xPos, 85); //(W1, L1, W2, L2)
      do Screen.drawRectangle(415 - xPos, 75, 420 - xPos, 80); //(W1, L1, W2, L2)
      return;
    }

    /** Draws the hawk on the screen. */
    method void draw() {
      // each pixel is of size 5*5
      do Screen.setColor(true);

      // Bottom -> Top
      do Screen.drawRectangle(440, 135, 445, 140); //(W1, L1, W2, L2)
      do Screen.drawRectangle(440, 130, 450, 135); //(W1, L1, W2, L2)
      do Screen.drawRectangle(440, 125, 450, 130); //(W1, L1, W2, L2)
      do Screen.drawRectangle(440, 120, 455, 125); //(W1, L1, W2, L2)
      do Screen.drawRectangle(440, 115, 460, 120); //(W1, L1, W2, L2)
      do Screen.drawRectangle(440, 110, 475, 115); //(W1, L1, W2, L2)
      do Screen.drawRectangle(440, 105, 465, 110); //(W1, L1, W2, L2)
      do Screen.drawRectangle(435, 100, 480, 105); //(W1, L1, W2, L2)
      do Screen.drawRectangle(430, 95, 465, 100); //(W1, L1, W2, L2)
      do Screen.drawRectangle(400, 90, 460, 95); //(W1, L1, W2, L2)
      do Screen.drawRectangle(405, 85, 425, 90); //(W1, L1, W2, L2)
      do Screen.drawRectangle(410, 80, 420, 85); //(W1, L1, W2, L2)
      do Screen.drawRectangle(415, 75, 420, 80); //(W1, L1, W2, L2)
      return;
    }

    // HEIGHT -> 180 - 120
    // WIDTH -> 480 - 400 
    method void moveLeft() {
        do Screen.setColor(false);
        do Screen.drawRectangle(440 - xPos, 135, 445 - xPos, 140); //(W1, L1, W2, L2)
        do Screen.drawRectangle(440 - xPos, 130, 450 - xPos, 135); //(W1, L1, W2, L2)
        do Screen.drawRectangle(440 - xPos, 125, 450 - xPos, 130); //(W1, L1, W2, L2)
        do Screen.drawRectangle(440 - xPos, 120, 455 - xPos, 125); //(W1, L1, W2, L2)
        do Screen.drawRectangle(440 - xPos, 115, 460 - xPos, 120); //(W1, L1, W2, L2)
        do Screen.drawRectangle(440 - xPos, 110, 475 - xPos, 115); //(W1, L1, W2, L2)
        do Screen.drawRectangle(440 - xPos, 105, 465 - xPos, 110); //(W1, L1, W2, L2)
        do Screen.drawRectangle(435 - xPos, 100, 480 - xPos, 105); //(W1, L1, W2, L2)
        do Screen.drawRectangle(430 - xPos, 95, 465 - xPos, 100); //(W1, L1, W2, L2)
        do Screen.drawRectangle(400 - xPos, 90, 460 - xPos, 95); //(W1, L1, W2, L2)
        do Screen.drawRectangle(405 - xPos, 85, 425 - xPos, 90); //(W1, L1, W2, L2)
        do Screen.drawRectangle(410 - xPos, 80, 420 - xPos, 85); //(W1, L1, W2, L2)
        do Screen.drawRectangle(415 - xPos, 75, 420 - xPos, 80); //(W1, L1, W2, L2)

        let xPos = xPos + 2;

        do Screen.setColor(true);

        do Screen.drawRectangle(440 - xPos, 135, 445 - xPos, 140); //(W1, L1, W2, L2)
        do Screen.drawRectangle(440 - xPos, 130, 450 - xPos, 135); //(W1, L1, W2, L2)
        do Screen.drawRectangle(440 - xPos, 125, 450 - xPos, 130); //(W1, L1, W2, L2)
        do Screen.drawRectangle(440 - xPos, 120, 455 - xPos, 125); //(W1, L1, W2, L2)
        do Screen.drawRectangle(440 - xPos, 115, 460 - xPos, 120); //(W1, L1, W2, L2)
        do Screen.drawRectangle(440 - xPos, 110, 475 - xPos, 115); //(W1, L1, W2, L2)
        do Screen.drawRectangle(440 - xPos, 105, 465 - xPos, 110); //(W1, L1, W2, L2)
        do Screen.drawRectangle(435 - xPos, 100, 480 - xPos, 105); //(W1, L1, W2, L2)
        do Screen.drawRectangle(430 - xPos, 95, 465 - xPos, 100); //(W1, L1, W2, L2)
        do Screen.drawRectangle(400 - xPos, 90, 460 - xPos, 95); //(W1, L1, W2, L2)
        do Screen.drawRectangle(405 - xPos, 85, 425 - xPos, 90); //(W1, L1, W2, L2)
        do Screen.drawRectangle(410 - xPos, 80, 420 - xPos, 85); //(W1, L1, W2, L2)
        do Screen.drawRectangle(415 - xPos, 75, 420 - xPos, 80); //(W1, L1, W2, L2)
        
        do Sys.wait(7);
        return;
    }
}
